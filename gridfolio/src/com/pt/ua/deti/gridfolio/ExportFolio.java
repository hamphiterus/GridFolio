package com.pt.ua.deti.gridfolio;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import android.annotation.SuppressLint;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import com.itextpdf.text.Anchor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.LineSeparator;
import com.pt.ua.deti.gridfolio.singleton.AppDataUser;


@SuppressLint("SdCardPath")
public class ExportFolio {
	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
	private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
	@SuppressWarnings("unused")
	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
	
	public static boolean createFolio(int idUser, Context context) {
		try {

			File f = new File("/sdcard/Gridfolio/");
			File f2 = new File("/sdcard/Gridfolio/" + AppDataUser.getInstance().getName() + "Folio.pdf");
			f.mkdirs();

			if (f2.exists())
				f2.delete();

			Document document = new Document(PageSize.A4, 50, 50, 50, 50);
			PdfWriter.getInstance(document, new FileOutputStream(f2));
			document.open();
			addMetaData(document);
		    addTitlePage(document, context);
		    addContent(document);
			document.close();
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		
	}
	
	private static void addMetaData(Document document) {
		document.addTitle("O meu Gridfolio");
		document.addSubject("A minha carreira");
		document.addKeywords("Complemento ao curriculum");
		document.addAuthor("Gridfolio");
		document.addCreator("Gridfolio");
	}

	private static void addTitlePage(Document document, Context context) throws DocumentException {
		Paragraph preface = new Paragraph();
		LineSeparator ls = new LineSeparator();
		// We add one empty line
		addEmptyLine(preface, 1);
		// Lets write a big header
		Bitmap bitmap = BitmapFactory.decodeResource(context.getResources(), R.drawable.logopreto);
	    ByteArrayOutputStream stream = new ByteArrayOutputStream();
	    bitmap.compress(Bitmap.CompressFormat.PNG, 100, stream);
		
        try {
			Image image = Image.getInstance(stream.toByteArray());
			preface.add(image);
			preface.add(new Paragraph("Este documento descreve os eventos e projetos realizados por " + AppDataUser.getInstance().getName(), subFont));
		} catch (MalformedURLException e) {
			preface.add(new Paragraph("Gridfolio", catFont));
			e.printStackTrace();
		} catch (IOException e) {
			preface.add(new Paragraph("Gridfolio", catFont));
			e.printStackTrace();
		}		

		addEmptyLine(preface, 1);
		// Will create: Report generated by: _name, _date
		preface.add(new Paragraph(AppDataUser.getInstance().getName()));
		preface.add(new Paragraph(AppDataUser.getInstance().getData()));
		preface.add(new Paragraph(AppDataUser.getInstance().getCourse()));
		preface.add(new Paragraph(AppDataUser.getInstance().getAno()));
		preface.add(new Paragraph(AppDataUser.getInstance().getNumeventos()));
		preface.add(new Paragraph(AppDataUser.getInstance().getNumprojectos()));
		preface.add(new Paragraph(new Chunk(ls)));
		addEmptyLine(preface, 3);
		
		
		//preface.add(new Paragraph(AppData.getInstance().get));

		addEmptyLine(preface, 8);

		document.add(preface);
		// Start a new page
		document.newPage();
	}

	private static void addContent(Document document) throws DocumentException {
		Anchor anchor = new Anchor("First Chapter", catFont);
		anchor.setName("First Chapter");

		// Second parameter is the number of the chapter
		Chapter catPart = new Chapter(new Paragraph(anchor), 1);

		Paragraph subPara = new Paragraph("Subcategory 1", subFont);
		Section subCatPart = catPart.addSection(subPara);
		subCatPart.add(new Paragraph("Hello"));

		subPara = new Paragraph("Subcategory 2", subFont);
		subCatPart = catPart.addSection(subPara);
		subCatPart.add(new Paragraph("Paragraph 1"));
		subCatPart.add(new Paragraph("Paragraph 2"));
		subCatPart.add(new Paragraph("Paragraph 3"));

		// Add a list
		createList(subCatPart);
		Paragraph paragraph = new Paragraph();
		addEmptyLine(paragraph, 5);
		subCatPart.add(paragraph);


		// Now add all this to the document
		document.add(catPart);

		// Next section
		anchor = new Anchor("Second Chapter", catFont);
		anchor.setName("Second Chapter");

		// Second parameter is the number of the chapter
		catPart = new Chapter(new Paragraph(anchor), 1);

		subPara = new Paragraph("Subcategory", subFont);
		subCatPart = catPart.addSection(subPara);
		subCatPart.add(new Paragraph("This is a very important message"));

		// Now add all this to the document
		document.add(catPart);

	}
	
	private static void createList(Section subCatPart) {
		List list = new List(true, false, 10);
		list.add(new ListItem("First point"));
		list.add(new ListItem("Second point"));
		list.add(new ListItem("Third point"));
		subCatPart.add(list);
	}

	private static void addEmptyLine(Paragraph paragraph, int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(" "));
		}
	}
}
